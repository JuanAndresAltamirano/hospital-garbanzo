version: '3.8'

services:
  frontend:
    container_name: clinica_mullo_frontend
    build:
      context: .
      dockerfile: Dockerfile.frontend.prod
    restart: always
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./backend-nest
      dockerfile: Dockerfile.backend.prod
    restart: always
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
    environment:
      - NODE_ENV=production
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USERNAME=root
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - DB_DATABASE=${MYSQL_DATABASE}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION_TIME=${JWT_EXPIRATION_TIME}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-network

  db:
    image: mysql:8.0
    container_name: clinica_mullo_db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database:/docker-entrypoint-initdb.d
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/www:/var/www/html
      - ./certbot/etc/letsencrypt:/etc/letsencrypt
      - ./certbot/var/www/certbot:/var/www/certbot
    depends_on:
      - frontend
      - backend
    restart: always
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/etc/letsencrypt:/etc/letsencrypt
      - ./certbot/var/www/certbot:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email ${ADMIN_EMAIL} --agree-tos --no-eff-email -d ${DOMAIN_NAME}

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge 